//
// Component
// Button
//

.Button {
    position: relative;
}


// Button

.Button
button {
    height: $ui-button-height;
    padding: 0 20px;

    background-color: transparent;
    border-radius: 4px;
    border: 1px solid #bbb;
    outline: 0;

    color: #555;
    text-align: center;
    font-size: 11px;
    font-weight: 600;
    text-decoration: none;
    line-height: $ui-button-height - 2px;
    letter-spacing: .06em;

    white-space: nowrap;
    cursor: pointer;
    transition: background-color .15s, border-color .15s, color .15s;

    &:hover {
        border-color: #888;
        color: #333;
        outline: 0;
    }

    span {
        transition: color .15s;
        font-weight: inherit;
        letter-spacing: inherit;
    }
}


// Spinner

.Button
.spinner-container {
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 0;
    pointer-events: none;
}


// State - Processing

.Button.processing {
    pointer-events: none;

    button * {
        color: transparent;
    }
}


// Flag - Size - Thin

.Button.thin
button {
    height: 30px;
    padding: 0 25px;
    line-height: 28px;
}


// Flag - Width

.Button.width-full
button {
    width: 100%;
}


// Flag - Colors

@mixin button-color($name, $color, $outline: 0, $darktext: 0) {
    .Button.#{$name}
    button {
        border-color: $color;

        @if $outline == 0 {
            background-color: $color;
            color: white;
        }

        &:hover {
            @if $outline == 0 { background-color: darken($color, 10%); }
            border-color: darken($color, 10%);
        }
    }

    @if $outline == 0 {
        .Button.#{$name}
        .Spinner {
            border-left-color: #fff;
        }
    }
}

@include button-color('green', $color-green);
@include button-color('blue', $color-blue);
